# %%
import numpy as np
import plotly.graph_objects as go
from plotly.offline import plot
import gemmi

R = 8.31446261815324e-3
T = 298
# %%
# toxd_aupatt.map is generated by $CCP4/examples/unix/runnable/patterson
ccp4 = gemmi.read_ccp4_map('../grid/KAXQIL_clean_14_0.1_100.ccp4')
ccp4.setup(2)
arr = np.array(ccp4.grid, copy=False)

# %%
# Cubic box
orth_mat = np.array(ccp4.grid.unit_cell.orthogonalization_matrix)
cube_len = 20
spacing = 0.3
num = int(cube_len//spacing)
x = np.linspace(0, cube_len, num=num)
y = np.linspace(0, cube_len, num=num)
z = np.linspace(0, cube_len, num=num)
X, Y ,Z = np.meshgrid(x, y, z,indexing='ij')
pts = np.column_stack( (X.flatten(), Y.flatten(), Z.flatten()))

# %%
values = []
for u in x:
    for v in y:
        for w in z:
            values.append(ccp4.grid.interpolate_value(gemmi.Position(u,v,w)))

# %%
fig = go.Figure(data=go.Volume(
    x=X.flatten(),
    y=Y.flatten(),
    z=Z.flatten(),
    value=np.array(values),
    isomin=-46,
    isomax=0,
    opacity=0.1, # needs to be small to see through all surfaces
    surface_count=17, # needs to be a large number for good volume rendering
    colorscale='RdBu',
    ))
plot(fig)
# fig.show()

# %%
