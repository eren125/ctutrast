# %%
import numpy
import plotly.graph_objects as go
from plotly.offline import plot
import gemmi

R = 8.31446261815324e-3
T = 298
# %%
# toxd_aupatt.map is generated by $CCP4/examples/unix/runnable/patterson
ccp4 = gemmi.read_ccp4_map('../grid/KAXQIL_clean_14_0.1_10.ccp4')
ccp4.setup(2)
arr = numpy.array(ccp4.grid, copy=False)

# %%
ccp4.grid.unit_cell.orthogonalization_matrix

# %%
x = numpy.linspace(0, ccp4.grid.unit_cell.a, num=arr.shape[0], endpoint=False)
y = numpy.linspace(0, ccp4.grid.unit_cell.b, num=arr.shape[1], endpoint=False)
z = numpy.linspace(0, ccp4.grid.unit_cell.c, num=arr.shape[2], endpoint=False)
# %%
X, Y ,Z = numpy.meshgrid(x, y, z,indexing='ij')

# %%
fig = go.Figure(data=go.Volume(
    x=X.flatten(),
    y=Y.flatten(),
    z=Z.flatten(),
    value=arr.flatten(),
    isomin=-50,
    isomax=50,
    opacity=0.1, # needs to be small to see through all surfaces
    surface_count=17, # needs to be a large number for good volume rendering
    ))
plot(fig)
# fig.show()
# %%
# %%
x = numpy.linspace(0, 10, num=5, endpoint=False)
y = numpy.linspace(0, 10, num=5, endpoint=False)
z = numpy.linspace(0, 10, num=5, endpoint=False)
# %%
X, Y ,Z = numpy.meshgrid(x, y, z,indexing='ij')

# %%
